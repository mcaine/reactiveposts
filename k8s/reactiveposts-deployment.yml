apiVersion: v1
kind: Service
metadata:
  name: reactiveposts
spec:
  ports:
    - port: 8080
  selector:
    app: reactiveposts
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reactiveposts
data:
    spring.jpa.hibernate.ddl-auto: validate
    spring.datasource.url: jdbc:postgresql://postgis:5432/postsdb
    spring.datasource.username: postgres
    spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
    spring.datasource.driver-class-name: org.postgresql.Driver
    reactiveposts.threads-update-interval: "30m"
    reactiveposts.threads-update-max-retries: "2"
    reactiveposts.index-depth: "2"
    reactiveposts.posts-update-interval: "69s"
    reactiveposts.posts-update-max-retries: "2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactiveposts
spec:
  selector:
    matchLabels:
      app: reactiveposts
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: reactiveposts
    spec:
      containers:
        - image: gcr.io/badinko/reactiveposts:0.2.8-SNAPSHOT
          name: reactiveposts
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgis-root-password
                  key: password
          ports:
            - containerPort: 8080
              name: reactiveposts
          resources:
            limits:
              cpu: "350m"
              memory: "600M"
            requests:
              cpu: "50m"
              memory: "400M"
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 120
            successThreshold: 1
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
      serviceAccountName: config-reader

